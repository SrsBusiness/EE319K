


ARM Macro Assembler    Page 1 


    1 00000000         ; print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for the Kentec EB-LM4F120-L
                       35
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these two
                        functions
    8 00000000         
    9 00000000         ;  Data pin assignments:
   10 00000000         ;  PB0-7   LCD parallel data input
   11 00000000         ;
   12 00000000         ;  Control pin assignments:
   13 00000000         ;  PA4     RD  Read control signal             ---------
                       ----------------
   14 00000000         ;  PA5     WR  Write control signal            | PA7 | P
                       A6 | PA5 | PA4 |
   15 00000000         ;  PA6     RS  Register/Data select signal     | CS  | R
                       S  | WR  | RD  |
   16 00000000         ;  PA7     CS  Chip select signal              ---------
                       ----------------
   17 00000000         ;
   18 00000000         ;  Touchpad pin assignments:
   19 00000000         ;  PA2     Y-                                  ---------
                       ----  -------------
   20 00000000         ;  PA3     X-                                  | PA3 | P
                       A2 |  | PE5 | PE4 |
   21 00000000         ;  PE4     X+    AIN9                          | X-  | Y
                       -  |  | Y+  | X+  |
   22 00000000         ;  PE5     Y+    AIN8  
   23 00000000         
   24 00000000         
   25 00000000                 PRESERVE8
   26 00000000                 IMPORT           LCD_OutChar
   27 00000000                 IMPORT           LCD_Goto
   28 00000000                 IMPORT           LCD_OutString
   29 00000000                 EXPORT           LCD_OutDec
   30 00000000                 EXPORT           LCD_OutFix
   31 00000000         
   32 00000000 00000000 
                       local   EQU              0
   33 00000000 00000000 
                       step1   EQU              0
   34 00000000 00000004 
                       step2   EQU              4
   35 00000000 00000008 
                       step3   EQU              8
   36 00000000 0000000C 
                       step4   EQU              12
   37 00000000         
   38 00000000         
   39 00000000         
   40 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   41 00000000                 THUMB
   42 00000000                 ALIGN



ARM Macro Assembler    Page 2 


   43 00000000         
   44 00000000         
   45 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   46 00000000         ; Output a 32-bit number in unsigned decimal format
   47 00000000         ; Input: R0 (call by value) 32-bit unsigned number 
   48 00000000         ; Output: none
   49 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   50 00000000         LCD_OutDec
   51 00000000 E92D 4FF0       PUSH             {R4-R11, LR}
   52 00000004 B081            SUB              SP, #4
   53 00000006 466C            MOV              R4, SP
   54 00000008 280A            CMP              R0, #10
   55 0000000A D30C            BLO              output
   56 0000000C F04F 020A       MOV              R2, #10
   57 00000010 FBB0 F3F2       UDIV             R3, R0, R2
   58 00000014 FB03 F102       MUL              R1, R3, R2
   59 00000018 EBA0 0101       SUB              R1, R0, R1
   60 0000001C 6021            STR              R1, [R4, #local] ;PUSH {R1}
   61 0000001E 0018            MOVS             R0, R3
   62 00000020 F7FF FFFE       BL               LCD_OutDec
   63 00000024 6820            LDR              R0, [R4, #local] ;POP  {R0}
   64 00000026 F100 0030 
                       output  ADD              R0, R0, #0x30
   65 0000002A B40F            PUSH             {R0-R3}
   66 0000002C F7FF FFFE       BL               LCD_OutChar
   67 00000030 BC0F            POP              {R0-R3}
   68 00000032 B001            ADD              SP, #4
   69 00000034 E8BD 4FF0       POP              {R4-R11, LR}
   70 00000038 4770            BX               LR
   71 0000003A         ;* * * * * * * * End of LCD_OutDec * * * * * * * * 
   72 0000003A         
   73 0000003A         ; -----------------------LCD _OutFix--------------------
                       --
   74 0000003A         ; Output characters to LCD display in fixed-point format
                       
   75 0000003A         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99 
   76 0000003A         ; Inputs:  R0 is an unsigned 32-bit number
   77 0000003A         ; Outputs: none
   78 0000003A         ; E.g., R0=0,    then output "0.000 " 
   79 0000003A         ;       R0=3,    then output "0.003 " 
   80 0000003A         ;       R0=89,   then output "0.089 " 
   81 0000003A         ;       R0=123,  then output "0.123 " 
   82 0000003A         ;       R0=9999, then output "9.999 " 
   83 0000003A         ;       R0>9999, then output "*.*** "
   84 0000003A         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   85 0000003A         LCD_OutFix
   86 0000003A E92D 4FF0       PUSH             {R4-R11, LR}
   87 0000003E F242 710F       MOV              R1, #9999
   88 00000042 4288            CMP              R0, R1
   89 00000044 D83E            BHI              GREATER
   90 00000046 B084            SUB              SP, #16
   91 00000048 F04F 020A       MOV              R2, #10
   92 0000004C         
   93 0000004C FBB0 F1F2       UDIV             R1, R0, R2  ;R1 = x/10
   94 00000050 FB01 F402       MUL              R4, R1, R2  ;R1 = (x/10)*10



ARM Macro Assembler    Page 3 


   95 00000054 EBA0 0304       SUB              R3, R0, R4  ;R3 = ORIG - (x/10)
                                                            *10
   96 00000058 F103 0330       ADD              R3, R3, #0x30 ;make ascii
   97 0000005C 9300            STR              R3, [SP, #step1] 
                                                            ;store in stack
   98 0000005E 4608            MOV              R0, R1
   99 00000060         
  100 00000060         
  101 00000060 FBB0 F1F2       UDIV             R1, R0, R2  ;R1 = x/10
  102 00000064 FB01 F402       MUL              R4, R1, R2  ;R1 = (x/10)*10
  103 00000068 EBA0 0304       SUB              R3, R0, R4  ;R3 = ORIG - (x/10)
                                                            *10
  104 0000006C F103 0330       ADD              R3, R3, #0x30 ;make ascii
  105 00000070 9301            STR              R3, [SP, #step2] 
                                                            ;store in stack
  106 00000072 4608            MOV              R0, R1
  107 00000074         
  108 00000074 FBB0 F1F2       UDIV             R1, R0, R2  ;R1 = x/10
  109 00000078 FB01 F402       MUL              R4, R1, R2  ;R1 = (x/10)*10
  110 0000007C EBA0 0304       SUB              R3, R0, R4  ;R3 = ORIG - (x/10)
                                                            *10
  111 00000080 F103 0330       ADD              R3, R3, #0x30 ;make ascii
  112 00000084 9302            STR              R3, [SP, #step3] 
                                                            ;store in stack
  113 00000086 4608            MOV              R0, R1
  114 00000088         
  115 00000088 FBB0 F1F2       UDIV             R1, R0, R2  ;R1 = x/10
  116 0000008C FB01 F402       MUL              R4, R1, R2  ;R1 = (x/10)*10
  117 00000090 EBA0 0304       SUB              R3, R0, R4  ;R3 = ORIG - (x/10)
                                                            *10
  118 00000094 F103 0330       ADD              R3, R3, #0x30 ;make ascii
  119 00000098 9303            STR              R3, [SP, #step4] 
                                                            ;store in stack
  120 0000009A 4608            MOV              R0, R1
  121 0000009C         
  122 0000009C 9803            LDR              R0, [SP, #step4]
  123 0000009E B401            PUSH             {R0}
  124 000000A0 F7FF FFFE       BL               LCD_OutChar
  125 000000A4 BC01            POP              {R0}
  126 000000A6         
  127 000000A6 F04F 002E       MOV              R0, #'.'
  128 000000AA F7FF FFFE       BL               LCD_OutChar
  129 000000AE         
  130 000000AE 9802            LDR              R0, [SP, #step3]
  131 000000B0 F7FF FFFE       BL               LCD_OutChar
  132 000000B4         
  133 000000B4 9801            LDR              R0, [SP, #step2]
  134 000000B6 F7FF FFFE       BL               LCD_OutChar
  135 000000BA         
  136 000000BA 9800            LDR              R0, [SP, #step1]
  137 000000BC F7FF FFFE       BL               LCD_OutChar
  138 000000C0 B004            ADD              SP, #16
  139 000000C2 E01D            B                done
  140 000000C4         
  141 000000C4         GREATER
  142 000000C4 F04F 002A       MOV              R0, #'*'
  143 000000C8 B401            PUSH             {R0}
  144 000000CA F7FF FFFE       BL               LCD_OutChar
  145 000000CE BC01            POP              {R0}



ARM Macro Assembler    Page 4 


  146 000000D0         
  147 000000D0 F04F 002E       MOV              R0, #'.'
  148 000000D4 B401            PUSH             {R0}
  149 000000D6 F7FF FFFE       BL               LCD_OutChar
  150 000000DA BC01            POP              {R0}
  151 000000DC         
  152 000000DC F04F 002A       MOV              R0, #'*'
  153 000000E0 B401            PUSH             {R0}
  154 000000E2 F7FF FFFE       BL               LCD_OutChar
  155 000000E6 BC01            POP              {R0}
  156 000000E8         
  157 000000E8 F04F 002A       MOV              R0, #'*'
  158 000000EC B401            PUSH             {R0}
  159 000000EE F7FF FFFE       BL               LCD_OutChar
  160 000000F2 BC01            POP              {R0}
  161 000000F4         
  162 000000F4 F04F 002A       MOV              R0, #'*'
  163 000000F8 B401            PUSH             {R0}
  164 000000FA F7FF FFFE       BL               LCD_OutChar
  165 000000FE BC01            POP              {R0}
  166 00000100         
  167 00000100         done
  168 00000100 E8BD 4FF0       POP              {R4-R11, LR}
  169 00000104 4770            BX               LR
  170 00000106         ;* * * * * * * * End of LCD_OutFix * * * * * * * * 
  171 00000106         
  172 00000106         
  173 00000106 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  174 00000108                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 40 in file Print.s
   Uses
      None
Comment: .text unused
GREATER 000000C4

Symbol: GREATER
   Definitions
      At line 141 in file Print.s
   Uses
      At line 89 in file Print.s
Comment: GREATER used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 50 in file Print.s
   Uses
      At line 29 in file Print.s
      At line 62 in file Print.s

LCD_OutFix 0000003A

Symbol: LCD_OutFix
   Definitions
      At line 85 in file Print.s
   Uses
      At line 30 in file Print.s
Comment: LCD_OutFix used once
done 00000100

Symbol: done
   Definitions
      At line 167 in file Print.s
   Uses
      At line 139 in file Print.s
Comment: done used once
output 00000026

Symbol: output
   Definitions
      At line 64 in file Print.s
   Uses
      At line 55 in file Print.s
Comment: output used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

local 00000000

Symbol: local
   Definitions
      At line 32 in file Print.s
   Uses
      At line 60 in file Print.s
      At line 63 in file Print.s

step1 00000000

Symbol: step1
   Definitions
      At line 33 in file Print.s
   Uses
      At line 97 in file Print.s
      At line 136 in file Print.s

step2 00000004

Symbol: step2
   Definitions
      At line 34 in file Print.s
   Uses
      At line 105 in file Print.s
      At line 133 in file Print.s

step3 00000008

Symbol: step3
   Definitions
      At line 35 in file Print.s
   Uses
      At line 112 in file Print.s
      At line 130 in file Print.s

step4 0000000C

Symbol: step4
   Definitions
      At line 36 in file Print.s
   Uses
      At line 119 in file Print.s
      At line 122 in file Print.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LCD_Goto 00000000

Symbol: LCD_Goto
   Definitions
      At line 27 in file Print.s
   Uses
      None
Comment: LCD_Goto unused
LCD_OutChar 00000000

Symbol: LCD_OutChar
   Definitions
      At line 26 in file Print.s
   Uses
      At line 66 in file Print.s
      At line 124 in file Print.s
      At line 128 in file Print.s
      At line 131 in file Print.s
      At line 134 in file Print.s
      At line 137 in file Print.s
      At line 144 in file Print.s
      At line 149 in file Print.s
      At line 154 in file Print.s
      At line 159 in file Print.s
      At line 164 in file Print.s

LCD_OutString 00000000

Symbol: LCD_OutString
   Definitions
      At line 28 in file Print.s
   Uses
      None
Comment: LCD_OutString unused
3 symbols
345 symbols in table
