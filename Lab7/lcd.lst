


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on LM4F120 or TM4C123
    6 00000000         ; EE319K lab 7 device driver for the Kentec EB-LM4F120-L
                       35
    7 00000000         ; This is the lowest level driver that interacts directl
                       y with hardware
    8 00000000         ; As part of Lab 7, students need to implement these thr
                       ee functions
    9 00000000         ;
   10 00000000         ;  Data pin assignments:
   11 00000000         ;  PB0-7   LCD parallel data input
   12 00000000         ;
   13 00000000         ;  Control pin assignments:
   14 00000000         ;  PA4     RD  Read control signal             ---------
                       ----------------
   15 00000000         ;  PA5     WR  Write control signal            | PA7 | P
                       A6 | PA5 | PA4 |
   16 00000000         ;  PA6     RS  Register/Data select signal     | CS  | R
                       S  | WR  | RD  |
   17 00000000         ;  PA7     CS  Chip select signal              ---------
                       ----------------
   18 00000000         ;
   19 00000000         ;  Touchpad pin assignments:
   20 00000000         ;  PA2     Y-                                  ---------
                       ----  -------------
   21 00000000         ;  PA3     X-                                  | PA3 | P
                       A2 |  | PE5 | PE4 |
   22 00000000         ;  PE4     X+    AIN9                          | X-  | Y
                       -  |  | Y+  | X+  |
   23 00000000         ;  PE5     Y+    AIN8                          ---------
                       ----  -------------
   24 00000000         
   25 00000000                 EXPORT           LCD_GPIOInit
   26 00000000                 EXPORT           LCD_WriteCommand
   27 00000000                 EXPORT           LCD_WriteData
   28 00000000         
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000                 THUMB
   31 00000000                 ALIGN
   32 00000000                 PRESERVE8
   33 00000000 400FE108 
                       SYSCTL_RCGC2_R
                               EQU              0x400FE108
   34 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   35 00000000 40004400 
                       GPIO_PORTA_DIR_R
                               EQU              0x40004400
   36 00000000 40004420 
                       GPIO_PORTA_AFSEL_R
                               EQU              0x40004420
   37 00000000 4000451C 



ARM Macro Assembler    Page 2 


                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C
   38 00000000 400053FC 
                       GPIO_PORTB_DATA_R
                               EQU              0x400053FC
   39 00000000 40005400 
                       GPIO_PORTB_DIR_R
                               EQU              0x40005400
   40 00000000 40005420 
                       GPIO_PORTB_AFSEL_R
                               EQU              0x40005420
   41 00000000 4000551C 
                       GPIO_PORTB_DEN_R
                               EQU              0x4000551C
   42 00000000         
   43 00000000         ; ************** LCD_GPIOInit **************************
                       **
   44 00000000         ; Initializes Ports A and B for Kentec EB-LM4F120-L35
   45 00000000         ; Port A bits 4-7 are output to four control signals
   46 00000000         ; Port B bits 0-7 are output data is the data bus 
   47 00000000         ; Initialize all control signals high (off)
   48 00000000         ;  PA4     RD  Read control signal             ---------
                       ----------------
   49 00000000         ;  PA5     WR  Write control signal            | PA7 | P
                       A6 | PA5 | PA4 |
   50 00000000         ;  PA6     RS  Register/Data select signal     | CS  | R
                       S  | WR  | RD  |
   51 00000000         ;  PA7     CS  Chip select signal              ---------
                       ----------------
   52 00000000         ; wait 40 us
   53 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   54 00000000         LCD_GPIOInit
   55 00000000 E92D 0FF0       PUSH             {R4-R11}
   56 00000004 482F            LDR              R0, =SYSCTL_RCGC2_R
   57 00000006 6801            LDR              R1, [R0]
   58 00000008 F041 0103       ORR              R1, R1, #0x03
   59 0000000C 6001            STR              R1, [R0]
   60 0000000E         
   61 0000000E 482E            LDR              R0, =GPIO_PORTA_DEN_R
   62 00000010 6801            LDR              R1, [R0]
   63 00000012 F041 01F0       ORR              R1, R1, #0xF0
   64 00000016 6001            STR              R1, [R0]
   65 00000018         
   66 00000018 482C            LDR              R0, =GPIO_PORTA_DIR_R
   67 0000001A 6801            LDR              R1, [R0]
   68 0000001C F041 01F0       ORR              R1, R1, #0xF0
   69 00000020 6001            STR              R1, [R0]
   70 00000022         
   71 00000022 482B            LDR              R0, =GPIO_PORTA_AFSEL_R
   72 00000024 F04F 0100       MOV              R1, #0
   73 00000028 6001            STR              R1, [R0]
   74 0000002A         
   75 0000002A 482A            LDR              R0, =GPIO_PORTA_DATA_R
   76 0000002C 6801            LDR              R1, [R0]
   77 0000002E F041 01F0       ORR              R1, R1, #0xF0
   78 00000032 6001            STR              R1, [R0]
   79 00000034         
   80 00000034 4828            LDR              R0, =GPIO_PORTB_DEN_R



ARM Macro Assembler    Page 3 


   81 00000036 6801            LDR              R1, [R0]
   82 00000038 F041 01FF       ORR              R1, R1, #0xFF
   83 0000003C 6001            STR              R1, [R0]
   84 0000003E         
   85 0000003E 4827            LDR              R0, =GPIO_PORTB_DIR_R
   86 00000040 6801            LDR              R1, [R0]
   87 00000042 F041 01FF       ORR              R1, R1, #0xFF
   88 00000046 6001            STR              R1, [R0]
   89 00000048         
   90 00000048 4825            LDR              R0, =GPIO_PORTB_AFSEL_R
   91 0000004A F04F 0100       MOV              R1, #0
   92 0000004E 6001            STR              R1, [R0]
   93 00000050         
   94 00000050 E8BD 0FF0       POP              {R4-R11}
   95 00000054 4770            BX               LR
   96 00000056         ;* * * * * * * * End of LCD_GPIOInit * * * * * * * * 
   97 00000056         
   98 00000056         
   99 00000056         ; ************** LCD_WriteCommand **********************
                       **
  100 00000056         ; - Writes an 8-bit command to the LCD controller
  101 00000056         ; - RS low during command write
  102 00000056         ; 8-bit command passed in R0
  103 00000056         ; 1) LCD_DATA = 0x00;    // Write 0 as MSB of command 
  104 00000056         ; 2) LCD_CTRL = 0x10;    // Set CS, WR, RS low
  105 00000056         ; 3) LCD_CTRL = 0x70;    // Set WR and RS high
  106 00000056         ; 4) LCD_DATA = command; // Write 8-bit LSB command 
  107 00000056         ; 5) LCD_CTRL = 0x10;    // Set WR and RS low
  108 00000056         ; 6) wait 2 bus cycles     
  109 00000056         ; 7) LCD_CTRL = 0xF0;    // Set CS, WR, RS high
  110 00000056         ; ******************************************************
                       **
  111 00000056         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  112 00000056         LCD_WriteCommand
  113 00000056 E92D 0FF0       PUSH             {R4-R11}
  114 0000005A         
  115 0000005A 4922            LDR              R1, =GPIO_PORTB_DATA_R
  116 0000005C F04F 0200       MOV              R2, #0
  117 00000060 700A            STRB             R2, [R1]
  118 00000062         
  119 00000062 491C            LDR              R1, =GPIO_PORTA_DATA_R
  120 00000064 F04F 0210       MOV              R2, #0x10
  121 00000068 600A            STR              R2, [R1]
  122 0000006A         
  123 0000006A F04F 0270       MOV              R2, #0x70
  124 0000006E 600A            STR              R2, [R1]
  125 00000070         
  126 00000070 491C            LDR              R1, =GPIO_PORTB_DATA_R
  127 00000072 7008            STRB             R0, [R1]
  128 00000074         
  129 00000074 4917            LDR              R1, =GPIO_PORTA_DATA_R
  130 00000076 F04F 0210       MOV              R2, #0x10
  131 0000007A 600A            STR              R2, [R1]
  132 0000007C         
  133 0000007C BF00            NOP
  134 0000007E BF00            NOP
  135 00000080         
  136 00000080 F04F 02F0       MOV              R2, #0xF0



ARM Macro Assembler    Page 4 


  137 00000084 600A            STR              R2, [R1]
  138 00000086         
  139 00000086 E8BD 0FF0       POP              {R4-R11}
  140 0000008A         
  141 0000008A 4770            BX               LR
  142 0000008C         ;* * * * * * * * End of LCD_WriteCommand * * * * * * * *
                        
  143 0000008C         
  144 0000008C         ; ************** LCD_WriteData *************************
                       **
  145 0000008C         ; - Writes 16-bit data to the LCD controller
  146 0000008C         ; - RS high during data write
  147 0000008C         ; 16-bit data passed in R0
  148 0000008C         ; 1) LCD_DATA = (data>>8);  // Write MSB to LCD data bus
                       
  149 0000008C         ; 2) LCD_CTRL = 0x50;       // Set CS, WR low
  150 0000008C         ; 3) LCD_CTRL = 0x70;       // Set WR high
  151 0000008C         ; 4) LCD_DATA = data;       // Write LSB to LCD data bus
                        
  152 0000008C         ; 5) LCD_CTRL = 0x50;       // Set WR low
  153 0000008C         ; 6) wait 2 bus cycles     
  154 0000008C         ; 7) LCD_CTRL = 0xF0;       // Set CS, WR high
  155 0000008C         ; ******************************************************
                       **
  156 0000008C         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  157 0000008C         LCD_WriteData
  158 0000008C E92D 0FF0       PUSH             {R4-R11}
  159 00000090         
  160 00000090 4914            LDR              R1, =GPIO_PORTB_DATA_R
  161 00000092 EA4F 2210       LSR              R2, R0, #8
  162 00000096 700A            STRB             R2, [R1]
  163 00000098         
  164 00000098 490E            LDR              R1, =GPIO_PORTA_DATA_R
  165 0000009A F04F 0250       MOV              R2, #0x50
  166 0000009E 600A            STR              R2, [R1]
  167 000000A0         
  168 000000A0 F04F 0270       MOV              R2, #0x70
  169 000000A4 600A            STR              R2, [R1]
  170 000000A6         
  171 000000A6 490F            LDR              R1, =GPIO_PORTB_DATA_R
  172 000000A8 7008            STRB             R0, [R1]
  173 000000AA         
  174 000000AA 490A            LDR              R1, =GPIO_PORTA_DATA_R
  175 000000AC F04F 0250       MOV              R2, #0x50
  176 000000B0 600A            STR              R2, [R1]
  177 000000B2         
  178 000000B2 BF00            NOP
  179 000000B4 BF00            NOP
  180 000000B6         
  181 000000B6 F04F 02F0       MOV              R2, #0xF0
  182 000000BA 600A            STR              R2, [R1]
  183 000000BC         
  184 000000BC E8BD 0FF0       POP              {R4-R11}
  185 000000C0         
  186 000000C0 4770            BX               LR
  187 000000C2         ;* * * * * * * * End of LCD_WriteData * * * * * * * * 
  188 000000C2         
  189 000000C2         



ARM Macro Assembler    Page 5 


  190 000000C2         
  191 000000C2         
  192 000000C2 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  193 000000C4                 END                          ; end of file
              400FE108 
              4000451C 
              40004400 
              40004420 
              400043FC 
              4000551C 
              40005400 
              40005420 
              400053FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
Luminary --predefine="__EVAL SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: .text unused
LCD_GPIOInit 00000000

Symbol: LCD_GPIOInit
   Definitions
      At line 54 in file LCD.s
   Uses
      At line 25 in file LCD.s
Comment: LCD_GPIOInit used once
LCD_WriteCommand 00000056

Symbol: LCD_WriteCommand
   Definitions
      At line 112 in file LCD.s
   Uses
      At line 26 in file LCD.s
Comment: LCD_WriteCommand used once
LCD_WriteData 0000008C

Symbol: LCD_WriteData
   Definitions
      At line 157 in file LCD.s
   Uses
      At line 27 in file LCD.s
Comment: LCD_WriteData used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_AFSEL_R 40004420

Symbol: GPIO_PORTA_AFSEL_R
   Definitions
      At line 36 in file LCD.s
   Uses
      At line 71 in file LCD.s
Comment: GPIO_PORTA_AFSEL_R used once
GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 34 in file LCD.s
   Uses
      At line 75 in file LCD.s
      At line 119 in file LCD.s
      At line 129 in file LCD.s
      At line 164 in file LCD.s
      At line 174 in file LCD.s

GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 37 in file LCD.s
   Uses
      At line 61 in file LCD.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_DIR_R 40004400

Symbol: GPIO_PORTA_DIR_R
   Definitions
      At line 35 in file LCD.s
   Uses
      At line 66 in file LCD.s
Comment: GPIO_PORTA_DIR_R used once
GPIO_PORTB_AFSEL_R 40005420

Symbol: GPIO_PORTB_AFSEL_R
   Definitions
      At line 40 in file LCD.s
   Uses
      At line 90 in file LCD.s
Comment: GPIO_PORTB_AFSEL_R used once
GPIO_PORTB_DATA_R 400053FC

Symbol: GPIO_PORTB_DATA_R
   Definitions
      At line 38 in file LCD.s
   Uses
      At line 115 in file LCD.s
      At line 126 in file LCD.s
      At line 160 in file LCD.s
      At line 171 in file LCD.s

GPIO_PORTB_DEN_R 4000551C

Symbol: GPIO_PORTB_DEN_R
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 41 in file LCD.s
   Uses
      At line 80 in file LCD.s
Comment: GPIO_PORTB_DEN_R used once
GPIO_PORTB_DIR_R 40005400

Symbol: GPIO_PORTB_DIR_R
   Definitions
      At line 39 in file LCD.s
   Uses
      At line 85 in file LCD.s
Comment: GPIO_PORTB_DIR_R used once
SYSCTL_RCGC2_R 400FE108

Symbol: SYSCTL_RCGC2_R
   Definitions
      At line 33 in file LCD.s
   Uses
      At line 56 in file LCD.s
Comment: SYSCTL_RCGC2_R used once
9 symbols
346 symbols in table
